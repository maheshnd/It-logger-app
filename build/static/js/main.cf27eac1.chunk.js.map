{"version":3,"sources":["action/logAction.js","action/types.js","components/layout/SearchBar.js","components/layout/AddBtn.js","action/techAction.js","components/tech/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/tech/AddTechModal.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/tech/TechItem.js","components/tech/Techs.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","style","marginBottom","className","id","placeholder","onChange","e","target","value","htmlFor","AddBtn","href","getTechs","console","log","response","state","tech","techs","loading","useEffect","map","t","firstName","lastName","kay","modalStyle","width","hight","addLogs","method","body","JSON","stringify","headers","useState","message","setMessage","attention","setAttention","setTech","name","disabled","checked","onClick","M","toast","html","newLogs","date","Date","clearCurrent","updateLog","current","updateNewLog","addTech","setFirstName","setLastName","newTech","deleteLog","setCurrent","format","_id","Preloader","getLogs","logs","length","key","deleteTech","statusTex","Techs","useSelector","useDispatch","initialState","error","combineReducers","action","filter","middleware","thunkMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAgKaA,EAAa,WACxB,MAAO,CACLC,KC3JuB,gBCwBZC,cAAQ,KAAM,CAAEC,WF6GL,SAACC,GAAD,8CAAU,WAAOC,GAAP,iBAAAC,EAAA,sEAEhCN,IAFgC,SAIdO,MAAM,aAAD,OAAcH,IAJL,cAI1BI,EAJ0B,gBAKbA,EAAIC,OALS,OAK1BC,EAL0B,OAOhCL,EAAS,CACPJ,KC3IqB,cD4IrBU,QAASD,IATqB,kDAYhCL,EAAS,CACPJ,KCzJkB,WD0JlBU,QAAS,8BAdqB,0DAAV,wDE7GXT,EA1BG,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACnB,OACE,yBAAKS,MAAO,CAAEC,aAAc,QAAUC,UAAU,QAC9C,yBAAKA,UAAU,eACb,8BACE,yBAAKA,UAAU,eACb,2BACEC,GAAG,SACHd,KAAK,SACLe,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOf,EAAWe,EAAEC,OAAOC,UAEvC,2BAAON,UAAU,aAAaO,QAAQ,UACpC,uBAAGP,UAAU,kBAAb,WAEF,uBAAGA,UAAU,kBAAb,gBCUGQ,EA5BA,WACb,OACE,yBAAKR,UAAU,oBACb,uBACES,KAAK,iBACLT,UAAU,sDAEV,uBAAGA,UAAU,wBAAb,QAEF,4BACE,4BACE,uBACES,KAAK,mBACLT,UAAU,oCAEV,uBAAGA,UAAU,kBAAb,YAGJ,4BACE,uBAAGS,KAAK,kBAAkBT,UAAU,kCAClC,uBAAGA,UAAU,kBAAb,mB,OCdCU,EAAW,yDAAM,WAAOnB,GAAP,iBAAAC,EAAA,sEAE1BN,IAF0B,SAIRO,MAAM,cAJE,cAIpBC,EAJoB,gBAKPA,EAAIC,OALG,OAKpBC,EALoB,OAM1Be,QAAQC,IAAIhB,GAEZL,EAAS,CACPJ,KHPmB,YGQnBU,QAASD,IAVe,kDAa1BL,EAAS,CACPJ,KHTqB,cGUrBU,QAAS,KAAMgB,WAfS,0DAAN,uDAqEX3B,EAAa,WACxB,MAAO,CACLC,KHxEuB,gBIwBZC,eAHS,SAAC0B,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAE0B,CAAEL,YAA3BtB,EA1BW,SAAC,GAA4C,IAA1CsB,EAAyC,EAAzCA,SAAyC,IAA/BK,KAAQC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,QAOpD,OANAC,qBAAU,WACRR,MAGC,KAGAO,GACS,OAAVD,GACAA,EAAMG,KAAI,SAACC,GAAD,OACR,4BAAQd,MAAK,UAAKc,EAAEC,UAAP,YAAoBD,EAAEE,UAAYC,IAAKH,EAAEnB,IACnDmB,EAAEC,UADL,IACiBD,EAAEE,gBCkFnBE,EAAa,CACjBC,MAAO,MACPC,MAAO,OAGMtC,cAAQ,KAAM,CAAEuC,QNxDR,SAACf,GAAD,8CAAS,WAAOrB,GAAP,iBAAAC,EAAA,sEAE5BN,IAF4B,SAIVO,MAAM,YAAa,CACnCmC,OAAQ,OACRC,KAAMC,KAAKC,UAAUnB,GACrBoB,QAAS,CACP,eAAgB,sBARQ,cAItBtC,EAJsB,gBAYTA,EAAIC,OAZK,OAYtBC,EAZsB,OAc5BL,EAAS,CACPJ,KC9DiB,UD+DjBU,QAASD,IAhBiB,kDAmB5BL,EAAS,CACPJ,KCpEkB,WDqElBU,QAAS,8BArBiB,0DAAT,wDMwDRT,EAlGK,SAAC,GAAiB,IAAfuC,EAAc,EAAdA,QAAc,EACLM,mBAAS,IADJ,mBAC5BC,EAD4B,KACnBC,EADmB,OAEDF,oBAAS,GAFR,mBAE5BG,EAF4B,KAEjBC,EAFiB,OAGXJ,mBAAS,IAHE,mBAG5BlB,EAH4B,KAGtBuB,EAHsB,KAyBnC,OACE,yBAAKrC,GAAG,gBAAgBD,UAAU,QAAQF,MAAO,CAAE0B,eACjD,yBAAKxB,UAAU,iBACb,gDACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,2BACEb,KAAK,OACLoD,KAAK,UACLjC,MAAO4B,EACP/B,SAAU,SAACC,GAAD,OAAO+B,EAAW/B,EAAEC,OAAOC,UAEvC,2BAAOC,QAAQ,UAAUP,UAAU,UAAnC,iBAKJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,4BACEuC,KAAK,OACLjC,MAAOS,EACPf,UAAU,kBACVG,SAAU,SAACC,GAAD,OAAOkC,EAAQlC,EAAEC,OAAOC,SAElC,4BAAQA,MAAM,GAAGkC,UAAQ,GAAzB,qBAGA,kBAAC,EAAD,SAIN,yBAAKxC,UAAU,OACb,yBAAKA,UAAU,eACb,2BACE,+BACE,2BACEb,KAAK,WACLc,GAAG,yBACHwC,QAASL,EACT9B,MAAO8B,EACPjC,SAAU,SAACC,GAAD,OAAOiC,GAAcD,MAEjC,sDAMV,yBAAKpC,UAAU,gBACb,uBACES,KAAK,KACLiC,QAxES,WACf,GAAgB,KAAZR,GAA2B,KAATnB,EACpB4B,IAAEC,MAAM,CAAEC,KAAM,wCACX,CACL,IAAMC,EAAU,CACdZ,UACAE,YACArB,OACAgC,KAAM,IAAIC,MAGZrB,EAAQmB,GACRT,EAAa,IACbF,EAAW,IACXG,EAAQ,IAERK,IAAEC,MAAM,CAAEC,KAAK,gBAAD,OAAkB9B,OAyD5Bf,UAAU,qCAHZ,SAMK,IACL,uBACES,KAAK,KACLT,UAAU,uDAFZ,eCyBFwB,EAAa,CACjBC,MAAO,MACPC,MAAO,OAOMtC,eAJS,SAAC0B,GAAD,MAAY,CAClCF,IAAKE,EAAMF,OAG2B,CAAEqC,aPjBd,WAC1B,MAAO,CACL9D,KCvGyB,kBMsH2B+D,UPT/B,SAACtC,GAAD,8CAAS,WAAOrB,GAAP,iBAAAC,EAAA,sEAE9BN,IAF8B,SAIZO,MAAM,aAAD,OAAcmB,EAAIX,IAAM,CAC7C2B,OAAQ,MACRC,KAAMC,KAAKC,UAAUnB,GACrBoB,QAAS,CACP,eAAgB,sBARU,cAIxBtC,EAJwB,gBAYXA,EAAIC,OAZO,OAYxBC,EAZwB,OAc9BL,EAAS,CACPJ,KC3HoB,aD4HpBU,QAASD,IAhBmB,kDAmB9BL,EAAS,CACPJ,KCrIkB,WDsIlBU,QAAS,8BArBmB,0DAAT,wDOSVT,EApHM,SAAC,GAAmD,IAA1C+D,EAAyC,EAAhDvC,IAAOuC,QAAWF,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAAgB,EACxCjB,mBAAS,IAD+B,mBAC/DC,EAD+D,KACtDC,EADsD,OAEpCF,oBAAS,GAF2B,mBAE/DG,EAF+D,KAEpDC,EAFoD,OAG9CJ,mBAAS,IAHqC,mBAG/DlB,EAH+D,KAGzDuB,EAHyD,KAKtE3B,QAAQC,IAAI,kBAAmBuC,GAE/BjC,qBAAU,WACJiC,IACFd,EAAac,EAAQf,WACrBD,EAAWgB,EAAQjB,SACnBI,EAAQa,EAAQpC,OAGlBJ,QAAQC,IAAI,sBAAuBuC,KAClC,CAACA,IAwBJ,OACE,yBAAKlD,GAAG,iBAAiBD,UAAU,QAAQF,MAAO,CAAE0B,eAClD,yBAAKxB,UAAU,iBACb,gDACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,2BACEb,KAAK,OACLoD,KAAK,UACLjC,MAAO4B,EACP/B,SAAU,SAACC,GAAD,OAAO+B,EAAW/B,EAAEC,OAAOC,UAEvC,2BAAOC,QAAQ,UAAUP,UAAU,UAAnC,iBAKJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,4BACEuC,KAAK,OACLjC,MAAOS,EACPf,UAAU,kBACVG,SAAU,SAACC,GAAD,OAAOkC,EAAQlC,EAAEC,OAAOC,SAElC,4BAAQA,MAAM,GAAGkC,UAAQ,GAAzB,qBAGA,kBAAC,EAAD,SAIN,yBAAKxC,UAAU,OACb,yBAAKA,UAAU,eACb,2BACE,+BACE,2BACEb,KAAK,WACLc,GAAG,yBACHwC,QAASL,EACT9B,MAAO8B,EACPjC,SAAU,SAACC,GAAD,OAAOiC,GAAcD,MAEjC,sDAMV,yBAAKpC,UAAU,gBACb,uBACES,KAAK,KACLiC,QA1ES,WACf,GAAgB,KAAZR,GAA2B,KAATnB,EACpB4B,IAAEC,MAAM,CAAEC,KAAM,wCACX,CACL,IAAMO,EAAe,CACnBlB,UACAE,YACArB,OACAgC,KAAM,IAAIC,KACV/C,GAAIkD,EAAQlD,IAGdiD,EAAUE,GACVH,IACAZ,EAAa,IACbF,EAAW,IACXG,EAAQ,IAERK,IAAEC,MAAM,CAAEC,KAAK,+BAAD,OAAiC9B,OAyD3Cf,UAAU,qCAHZ,UAMK,IACL,uBACES,KAAK,KACLT,UAAU,uDAFZ,eCnBOZ,cAAQ,KAAM,CAAEiE,QJrDR,SAACtC,GAAD,8CAAU,WAAOxB,GAAP,iBAAAC,EAAA,sEAE7BN,IAF6B,SAIXO,MAAM,aAAc,CACpCmC,OAAQ,OACRC,KAAMC,KAAKC,UAAUhB,GACrBiB,QAAS,CACP,eAAgB,sBARS,cAIvBtC,EAJuB,gBAWVA,EAAIC,OAXM,OAWvBC,EAXuB,OAY7Be,QAAQC,IAAI,YAAahB,GAEzBL,EAAS,CACPJ,KHlCkB,WGmClBU,QAASD,IAhBkB,kDAmB7BL,EAAS,CACPJ,KHrCqB,cGsCrBU,QAAS,KAAMgB,WArBY,0DAAV,wDIqDRzB,EA5EM,SAAC,GAAiB,IAAfiE,EAAc,EAAdA,QAAc,EACFpB,mBAAS,IADP,mBAC7BZ,EAD6B,KAClBiC,EADkB,OAEJrB,mBAAS,IAFL,mBAE7BX,EAF6B,KAEnBiC,EAFmB,KAsBpC,OACE,yBAAKtD,GAAG,iBAAiBD,UAAU,SACjC,yBAAKA,UAAU,iBACb,kDACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,2BACEb,KAAK,OACLoD,KAAK,YACLjC,MAAOe,EACPlB,SAAU,SAACC,GAAD,OAAOkD,EAAalD,EAAEC,OAAOC,UAEzC,2BAAOC,QAAQ,YAAYP,UAAU,UAArC,gBAKJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,2BACEb,KAAK,OACLoD,KAAK,WACLjC,MAAOgB,EACPnB,SAAU,SAACC,GAAD,OAAOmD,EAAYnD,EAAEC,OAAOC,UAExC,2BAAOC,QAAQ,WAAWP,UAAU,UAApC,gBAMN,yBAAKA,UAAU,gBACb,uBACES,KAAK,KACLiC,QApDS,WACf,GAAkB,KAAdrB,GAAiC,KAAbC,EACtBqB,IAAEC,MAAM,CAAEC,KAAM,4CACX,CACL,IAAMW,EAAU,CACdnC,YACAC,YAGF+B,EAAQG,GACR7C,QAAQC,IAAI,QAAS4C,GAErBb,IAAEC,MAAM,CAAEC,KAAK,GAAD,OAAKxB,EAAL,oBAEdiC,EAAa,IACbC,EAAY,MAsCRvD,UAAU,qCAHZ,SAMK,IACL,uBACES,KAAK,KACLT,UAAU,uDAFZ,e,iBCvBOZ,cAAQ,KAAM,CAAEqE,UT8BN,SAACxD,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,sEAE7BN,IAF6B,SAIvBO,MAAM,aAAD,OAAcQ,GAAM,CAC7B2B,OAAQ,WALmB,OAO7BrC,EAAS,CACPJ,KCjFoB,aDkFpBU,QAASI,IATkB,gDAY7BV,EAAS,CACPJ,KCxFkB,WDyFlBU,QAAS,8BAdkB,yDAAR,uDS9BiB6D,WTmDhB,SAAC9C,GACzB,MAAO,CACLzB,KC/FuB,cDgGvBU,QAASe,KStDExB,EAtCC,SAAC,GAAoC,IAAlCwB,EAAiC,EAAjCA,IAAK6C,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAMjC,OACE,wBAAI1D,UAAU,mBACZ,6BACE,uBACES,KAAK,kBACLT,UAAS,wBACPY,EAAIwB,UAAY,WAAa,aAE/BM,QAAS,kBAAMgB,EAAW9C,KAEzBA,EAAIsB,SAEP,6BACA,0BAAMlC,UAAU,aACd,0BAAMA,UAAU,cAAhB,OAAkCY,EAAIX,IADxC,mBACmE,IACjE,0BAAMD,UAAU,cAAcY,EAAIG,MAFpC,MAEoD,IAClD,kBAAC,IAAD,CAAQ4C,OAAO,4BAA4B/C,EAAImC,OAEjD,uBAAGtC,KAAK,KAAKiC,QAvBF,WACfe,EAAU7C,EAAIgD,KACdjB,IAAEC,MAAM,CAAEC,KAAK,SAAD,OAAWjC,EAAI2B,KAAf,+BAqBsBvC,UAAU,qBACxC,uBAAGA,UAAU,4BAAb,gBCtBK6D,EARG,WAChB,OACE,yBAAK7D,UAAU,aACb,yBAAKA,UAAU,oBC8BNZ,eAJS,SAAC0B,GAAD,MAAY,CAClCF,IAAKE,EAAMF,OAG2B,CAAEkD,QXPnB,yDAAM,WAAOvE,GAAP,iBAAAC,EAAA,sEAEzBN,IAFyB,SAIPO,MAAM,aAJC,cAInBC,EAJmB,gBAKNA,EAAIC,OALE,OAKnBC,EALmB,OAOzBL,EAAS,CACPJ,KCpCkB,WDqClBU,QAASD,IATc,kDAYzBL,EAAS,CACPJ,KCzCkB,WD0ClBU,QAAS,8BAdc,0DAAN,wDWORT,EA7BF,SAAC,GAAyC,IAAD,IAAtCwB,IAAOmD,EAA+B,EAA/BA,KAAM9C,EAAyB,EAAzBA,QAAW6C,EAAc,EAAdA,QAOtC,OANA5C,qBAAU,WACR4C,MAGC,IAEC7C,GAAoB,OAAT8C,EACN,kBAAC,EAAD,MAIP,wBAAI/D,UAAU,0BACZ,wBAAIA,UAAU,qBACZ,wBAAIA,UAAU,UAAd,gBAEAiB,GAA2B,IAAhB8C,EAAKC,OAGhBD,EAAK5C,KAAI,SAACP,GAAD,OAAS,kBAAC,EAAD,CAASqD,IAAKrD,EAAIX,GAAIW,IAAKA,OAF7C,uBAAGZ,UAAU,UAAb,0BCIOZ,cAAQ,KAAM,CAAE8E,WR8BL,SAACjE,GAAD,8CAAQ,WAAOV,GAAP,SAAAC,EAAA,sEAE9BN,IAF8B,SAIxBO,MAAM,cAAD,OAAeQ,GAAM,CAC9B2B,OAAQ,WALoB,OAO9BrC,EAAS,CACPJ,KHrDqB,cGsDrBU,QAASI,IATmB,gDAY9BV,EAAS,CACPJ,KHzDqB,cG0DrBU,QAAS,KAAMgB,SAASsD,YAdI,yDAAR,wDQ9BX/E,EAvBE,SAAC,GAA0B,IAAxB2B,EAAuB,EAAvBA,KAAMmD,EAAiB,EAAjBA,WACxB,OACE,wBAAIlE,UAAU,mBACZ,6BACGe,EAAKM,UADR,IACoBN,EAAKO,SACvB,uBAAGb,KAAK,KAAKT,UAAU,qBACrB,uBACEA,UAAU,2BACV0C,QAAS,kBAAMwB,EAAWnD,EAAK6C,OAFjC,gBCwCKQ,EA5CD,WACZ,IAAMrD,EAAOsD,aAAY,SAACvD,GAAD,OAAWA,EAAMC,QACpCxB,EAAW+E,cAETtD,EAAmBD,EAAnBC,MAAOC,EAAYF,EAAZE,QASf,OAPAC,qBAAU,WACR3B,EAASmB,OAGR,IACHC,QAAQC,IAAI,cAAeI,GAGzB,yBAAKf,GAAG,kBAAkBD,UAAU,SAClC,yBAAKA,UAAU,iBACb,gDACA,wBAAIA,UAAU,eACViB,GACU,OAAVD,GACAA,EAAMG,KAAI,SAACJ,GAAD,OAAU,kBAAC,EAAD,CAAUA,KAAMA,EAAMkD,IAAKlD,EAAK6C,WAG1D,yBAAK5D,UAAU,gBACb,uBACES,KAAK,KACLT,UAAU,uDAFZ,Y,sCClBFuE,EAAe,CACnBR,KAAM,KACNZ,QAAS,KACTlC,SAAS,EACTuD,MAAO,MCRHD,EAAe,CACnBvD,MAAO,KACPC,SAAS,EACTuD,MAAO,MCPMC,4BAAgB,CAC7B7D,IFca,WAAmC,IAAlCE,EAAiC,uDAAzByD,EAAcG,EAAW,uCAC/C,OAAQA,EAAOvF,MACb,IbrBoB,WasBlB,OAAO,eACF2B,EADL,CAEEiD,KAAMW,EAAO7E,QACboB,SAAS,IAEb,Ib1BmB,Ua2BjB,OAAO,eACFH,EADL,CAEEiD,KAAK,GAAD,mBAAMjD,EAAMiD,MAAZ,CAAkBW,EAAO7E,YAEjC,Ib9BsB,aa+BpB,OAAO,eACFiB,EADL,CAEEiD,KAAMjD,EAAMiD,KAAKY,QAAO,SAAC/D,GAAD,OAASA,EAAIgD,MAAQc,EAAO7E,WACpDoB,SAAS,IAGb,IbpCuB,caqCrB,OAAO,eACFH,EADL,CAEEqC,QAASuB,EAAO7E,UAGpB,IbzCyB,gBa0CvB,OAAO,eACFiB,EADL,CAEEqC,QAAS,OAGb,Ib9CsB,aa+CpB,OAAO,eACFrC,EADL,CAEEiD,KAAMjD,EAAMiD,KAAK5C,KAAI,SAACP,GAAD,OACnBA,EAAIX,KAAOyE,EAAO7E,QAAQI,GAAKyE,EAAO7E,QAAUe,OAGtD,IbjDuB,cakDrB,OAAO,eACFE,EADL,CAEEiD,KAAMW,EAAO7E,UAGjB,IbzDuB,ca0DrB,OAAO,eACFiB,EADL,CAEEG,SAAS,IAEb,Ib7DsB,aa+DpB,OADAN,QAAQC,IAAI8D,EAAO7E,SACZ,eACFiB,EADL,CAEE0D,MAAOE,EAAO7E,QACdoB,SAAS,IAGb,QACE,OAAOH,IExEXC,KDQa,WAAmC,IAAlCD,EAAiC,uDAAzByD,EAAcG,EAAW,uCAC/C,OAAQA,EAAOvF,MACb,IdNqB,YcOnB,OAAO,eACF2B,EADL,CAEEE,MAAO0D,EAAO7E,UAElB,IdVoB,WcWlB,OAAO,eACFiB,EADL,CAEEE,MAAM,GAAD,mBAAMF,EAAME,OAAZ,CAAmB0D,EAAO7E,UAC/BoB,SAAS,IAEb,IdfuB,ccgBrB,OAAO,eACFH,EADL,CAEEE,MAAOF,EAAME,MAAM2D,QAAO,SAAC5D,GAAD,OAAUA,EAAK6C,MAAQc,EAAO7E,WACxDoB,SAAS,IAEb,Id1BuB,cc2BrB,OAAO,eACFH,EADL,CAEEG,SAAS,IAEb,IdzBuB,cc2BrB,OADAN,QAAQC,IAAI,QAAS8D,EAAO7E,SACrB,eACFiB,EADL,CAEE0D,MAAOE,EAAO7E,QACdoB,SAAS,IAGb,QACE,OAAOH,MExCP8D,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KC2B1BO,G,MAtBH,WAKV,OAJAjE,qBAAU,WAERyB,IAAEyC,cAGF,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,WAAD,KACE,kBAAC,EAAD,MACA,yBAAK9E,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,WC5BVqF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.cf27eac1.chunk.js","sourcesContent":["import {\r\n  GET_LOGS,\r\n  SEARCH_LOGS,\r\n  SET_LOADING,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n} from './types';\r\n\r\n// export default getLogs = () {\r\n\r\n//     return async dispatch =>{\r\n//         setLoading();\r\n\r\n//         const res = await fetch('/logs');\r\n//         const data = await res.json();\r\n\r\n//         dispatch({\r\n//             type: GET_LOGS,\r\n//             payload: data\r\n//         })\r\n//     }\r\n\r\n// }\r\n\r\n//Get logs from server\r\nexport const getLogs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/api/logs');\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: 'error.response.statusText',\r\n    });\r\n  }\r\n};\r\n\r\n//Add new Log\r\nexport const addLogs = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/api/logs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: ADD_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: 'error.response.statusText',\r\n    });\r\n  }\r\n};\r\n\r\n//Delete log\r\nexport const deleteLog = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/api/logs/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    dispatch({\r\n      type: DELETE_LOG,\r\n      payload: id,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: 'error.response.statusText',\r\n    });\r\n  }\r\n};\r\n\r\n//Set Current\r\n\r\nexport const setCurrent = (log) => {\r\n  return {\r\n    type: SET_CURRENT,\r\n    payload: log,\r\n  };\r\n};\r\n\r\n//Clear Current\r\n\r\nexport const clearCurrent = () => {\r\n  return {\r\n    type: CLEAR_CURRENT,\r\n  };\r\n};\r\n\r\n//Update log on Server\r\n\r\nexport const updateLog = (log) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/api/logs/${log.id}`, {\r\n      method: 'PUT',\r\n      body: JSON.stringify(log),\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: UPDATE_LOG,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: 'error.response.statusText',\r\n    });\r\n  }\r\n};\r\n\r\n//Search logs\r\nexport const searchLogs = (text) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch(`/api/logs/${text}`);\r\n    const data = await res.json();\r\n\r\n    dispatch({\r\n      type: SEARCH_LOGS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_LOGS,\r\n      payload: 'error.response.statusText',\r\n    });\r\n  }\r\n};\r\n\r\n//Set loading to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchLogs } from '../../action/logAction';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ searchLogs }) => {\r\n  return (\r\n    <nav style={{ marginBottom: '30px' }} className='blue'>\r\n      <div className='nav-wrapper'>\r\n        <form>\r\n          <div className='input-field'>\r\n            <input\r\n              id='search'\r\n              type='search'\r\n              placeholder='Search Logs'\r\n              onChange={(e) => searchLogs(e.target.value)}\r\n            />\r\n            <label className='label-icon' htmlFor='search'>\r\n              <i className='material-icons'>search</i>\r\n            </label>\r\n            <i className='material-icons'>close</i>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  searchLogs: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { searchLogs })(SearchBar);\r\n","import React from 'react';\r\n\r\nconst AddBtn = () => {\r\n  return (\r\n    <div className='fixed-action-btn'>\r\n      <a\r\n        href='#add-log-modal'\r\n        className='btn-floating btn-large blue darken-2 modal-trigger'\r\n      >\r\n        <i className='large material-icons'>add</i>\r\n      </a>\r\n      <ul>\r\n        <li>\r\n          <a\r\n            href='#tech-list-modal'\r\n            className='btn-floating green modal-trigger'\r\n          >\r\n            <i className='material-icons'>person</i>\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\r\n            <i className='material-icons'>person_add</i>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBtn;\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  TECHS_ERROR,\r\n  SET_LOADING,\r\n} from '../action/types';\r\n\r\nexport const getTechs = () => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/api/techs');\r\n    const data = await res.json();\r\n    console.log(data);\r\n\r\n    dispatch({\r\n      type: GET_TECHS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error.response,\r\n    });\r\n  }\r\n};\r\n\r\n//Add Tech to Server\r\n\r\nexport const addTech = (tech) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    const res = await fetch('/api/techs', {\r\n      method: 'POST',\r\n      body: JSON.stringify(tech),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    console.log('Data.....', data);\r\n\r\n    dispatch({\r\n      type: ADD_TECH,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error.response,\r\n    });\r\n  }\r\n};\r\n\r\n//Delete Tech\r\nexport const deleteTech = (id) => async (dispatch) => {\r\n  try {\r\n    setLoading();\r\n\r\n    await fetch(`/api/techs/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    dispatch({\r\n      type: DELETE_TECH,\r\n      payload: id,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: TECHS_ERROR,\r\n      payload: error.response.statusTex,\r\n    });\r\n  }\r\n};\r\n\r\n//Set Laoding to true\r\nexport const setLoading = () => {\r\n  return {\r\n    type: SET_LOADING,\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getTechs } from '../../action/techAction';\r\n\r\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\r\n  useEffect(() => {\r\n    getTechs();\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    !loading &&\r\n    techs !== null &&\r\n    techs.map((t) => (\r\n      <option value={`${t.firstName} ${t.lastName}`} kay={t.id}>\r\n        {t.firstName} {t.lastName}\r\n      </option>\r\n    ))\r\n  );\r\n};\r\n\r\nTechSelectOptions.propTypes = {\r\n  getTechs: PropTypes.func.isRequired,\r\n  tech: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tech: state.tech,\r\n});\r\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\r\n","import React, { useState } from 'react';\r\nimport TechSelectOptions from '../tech/TechSelectOptions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport { addLogs } from '../../action/logAction';\r\n\r\nconst AddLogModal = ({ addLogs }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const newLogs = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n      };\r\n\r\n      addLogs(newLogs);\r\n      setAttention('');\r\n      setMessage('');\r\n      setTech('');\r\n\r\n      M.toast({ html: `Log added by ${tech}` });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='add-log-modal' className='modal' style={{ modalStyle }}>\r\n      <div className='modal-content'>\r\n        <h4>Enter system log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  id='indeterminate-checkbox'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>{' '}\r\n        <a\r\n          href='#!'\r\n          className='modal-close waves-effect waves-blue waves-light btn'\r\n        >\r\n          Cancel\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  hight: '75%',\r\n};\r\n\r\nexport default connect(null, { addLogs })(AddLogModal);\r\n","import React, { useState, useEffect } from 'react';\r\nimport TechSelectOptions from '../tech/TechSelectOptions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport { clearCurrent, updateLog } from '../../action/logAction';\r\n\r\nconst EditLogModal = ({ log: { current }, clearCurrent, updateLog }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [attention, setAttention] = useState(false);\r\n  const [tech, setTech] = useState('');\r\n\r\n  console.log('Testing current', current);\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setAttention(current.attention);\r\n      setMessage(current.message);\r\n      setTech(current.tech);\r\n    }\r\n\r\n    console.log('Testing current use', current);\r\n  }, [current]);\r\n\r\n  const onSubmit = () => {\r\n    if (message === '' || tech === '') {\r\n      M.toast({ html: 'Please enter a message and tech' });\r\n    } else {\r\n      const updateNewLog = {\r\n        message,\r\n        attention,\r\n        tech,\r\n        date: new Date(),\r\n        id: current.id,\r\n      };\r\n\r\n      updateLog(updateNewLog);\r\n      clearCurrent();\r\n      setAttention('');\r\n      setMessage('');\r\n      setTech('');\r\n\r\n      M.toast({ html: `Log successfully updated by ${tech}` });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id='edit-log-modal' className='modal' style={{ modalStyle }}>\r\n      <div className='modal-content'>\r\n        <h4>Enter system log</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='message'\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <label htmlFor='message' className='active'>\r\n              Log Message\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <select\r\n              name='tech'\r\n              value={tech}\r\n              className='browser-default'\r\n              onChange={(e) => setTech(e.target.value)}\r\n            >\r\n              <option value='' disabled>\r\n                Select Technician\r\n              </option>\r\n              <TechSelectOptions />\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <p>\r\n              <label>\r\n                <input\r\n                  type='checkbox'\r\n                  id='indeterminate-checkbox'\r\n                  checked={attention}\r\n                  value={attention}\r\n                  onChange={(e) => setAttention(!attention)}\r\n                />\r\n                <span>Needs Attention</span>\r\n              </label>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='waves-effect blue waves-light btn'\r\n        >\r\n          Update\r\n        </a>{' '}\r\n        <a\r\n          href='#!'\r\n          className='modal-close waves-effect waves-blue waves-light btn'\r\n        >\r\n          Cancel\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst modalStyle = {\r\n  width: '75%',\r\n  hight: '75%',\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { clearCurrent, updateLog })(\r\n  EditLogModal\r\n);\r\n","import React, { useState } from 'react';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addTech } from '../../action/techAction';\r\n//import TechSelectOptions from './TechSelectOptions';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n\r\n  const onSubmit = () => {\r\n    if (firstName === '' || lastName === '') {\r\n      M.toast({ html: 'Please enter the fist and last name' });\r\n    } else {\r\n      const newTech = {\r\n        firstName,\r\n        lastName,\r\n      };\r\n\r\n      addTech(newTech);\r\n      console.log('TTTTT', newTech);\r\n\r\n      M.toast({ html: `${firstName} added as tech` });\r\n\r\n      setFirstName('');\r\n      setLastName('');\r\n    }\r\n  };\r\n  return (\r\n    <div id='add-tech-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Add New Technician</h4>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            />\r\n            <label htmlFor='firstName' className='active'>\r\n              First Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='input-field'>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            />\r\n            <label htmlFor='lastName' className='active'>\r\n              Last Name\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          onClick={onSubmit}\r\n          className='waves-effect blue waves-light btn'\r\n        >\r\n          Enter\r\n        </a>{' '}\r\n        <a\r\n          href='#!'\r\n          className='modal-close waves-effect waves-blue waves-light btn'\r\n        >\r\n          Cancel\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddTechModal.propTypes = {\r\n  addTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addTech })(AddTechModal);\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteLog, setCurrent } from '../../action/logAction';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n  const onDelete = () => {\r\n    deleteLog(log._id);\r\n    M.toast({ html: `Log:- ${log.name} deleted successfully !!` });\r\n  };\r\n\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        <a\r\n          href='#edit-log-modal'\r\n          className={`modal-trigger ${\r\n            log.attention ? 'red-text' : 'blue-text'\r\n          }`}\r\n          onClick={() => setCurrent(log)}\r\n        >\r\n          {log.message}\r\n        </a>\r\n        <br />\r\n        <span className='grey-text'>\r\n          <span className='black-text'>ID #{log.id}</span> last updated by{' '}\r\n          <span className='black-text'>{log.tech}</span> on{' '}\r\n          <Moment format='MMMM Do YYYY, h:mm:ss: a'>{log.date}</Moment>\r\n        </span>\r\n        <a href='#!' onClick={onDelete} className='secondary-content'>\r\n          <i className='material-icons grey-text'>delete</i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nLogItem.propTypes = {\r\n  log: PropTypes.object.isRequired,\r\n  deleteLog: PropTypes.func.isRequired,\r\n  setCurrent: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\r\n","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className='progress '>\r\n      <div className='indeterminate'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import React, { useEffect } from 'react';\r\nimport LogItem from './LogItem';\r\nimport Preloader from '../layout/Preloader';\r\nimport { connect } from 'react-redux';\r\nimport { getLogs } from '../../action/logAction';\r\n\r\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\r\n  useEffect(() => {\r\n    getLogs();\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading || logs === null) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <ul className='collection with-header'>\r\n      <li className='collection-header'>\r\n        <h4 className='center'>System Logs</h4>\r\n      </li>\r\n      {!loading && logs.length === 0 ? (\r\n        <p className='center'>No logs to show...</p>\r\n      ) : (\r\n        logs.map((log) => <LogItem key={log.id} log={log} />)\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  log: state.log,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getLogs })(Logs);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTech } from '../../action/techAction';\r\nconst TechItem = ({ tech, deleteTech }) => {\r\n  return (\r\n    <li className='collection-item'>\r\n      <div>\r\n        {tech.firstName} {tech.lastName}\r\n        <a href='#!' className='secondary-content'>\r\n          <i\r\n            className='material-icons grey-text'\r\n            onClick={() => deleteTech(tech._id)}\r\n          >\r\n            delete\r\n          </i>\r\n        </a>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nTechItem.propTypes = {\r\n  tech: PropTypes.object.isRequired,\r\n  deleteTech: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteTech })(TechItem);\r\n","import React, { useEffect } from 'react';\r\nimport TechItem from './TechItem';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getTechs } from '../../action/techAction';\r\n\r\nconst Techs = () => {\r\n  const tech = useSelector((state) => state.tech);\r\n  const dispatch = useDispatch();\r\n\r\n  const { techs, loading } = tech;\r\n\r\n  useEffect(() => {\r\n    dispatch(getTechs());\r\n\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  console.log('Testing ...', techs);\r\n\r\n  return (\r\n    <div id='tech-list-modal' className='modal'>\r\n      <div className='modal-content'>\r\n        <h4>Technician List </h4>\r\n        <ul className='collection'>\r\n          {!loading &&\r\n            techs !== null &&\r\n            techs.map((tech) => <TechItem tech={tech} key={tech._id} />)}\r\n        </ul>\r\n      </div>\r\n      <div className='modal-footer'>\r\n        <a\r\n          href='#!'\r\n          className='modal-close waves-effect waves-blue waves-light btn'\r\n        >\r\n          Close\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTechs.propTypes = {\r\n  getTechs: PropTypes.func.isRequired,\r\n  tech: PropTypes.object.isRequired,\r\n};\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   tech: state.tech,\r\n// });\r\n\r\nexport default Techs;\r\n","import {\r\n  GET_LOGS,\r\n  SEARCH_LOGS,\r\n  SET_LOADING,\r\n  LOGS_ERROR,\r\n  ADD_LOG,\r\n  DELETE_LOG,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_LOG,\r\n} from '../action/types';\r\n\r\nconst initialState = {\r\n  logs: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n        loading: false,\r\n      };\r\n    case ADD_LOG:\r\n      return {\r\n        ...state,\r\n        logs: [...state.logs, action.payload],\r\n      };\r\n    case DELETE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.filter((log) => log._id !== action.payload),\r\n        loading: false,\r\n      };\r\n\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n\r\n    case UPDATE_LOG:\r\n      return {\r\n        ...state,\r\n        logs: state.logs.map((log) =>\r\n          log.id === action.payload.id ? action.payload : log\r\n        ),\r\n      };\r\n    case SEARCH_LOGS:\r\n      return {\r\n        ...state,\r\n        logs: action.payload,\r\n      };\r\n\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case LOGS_ERROR:\r\n      console.log(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  GET_TECHS,\r\n  ADD_TECH,\r\n  DELETE_TECH,\r\n  TECHS_ERROR,\r\n  SET_LOADING,\r\n} from '../action/types';\r\n\r\nconst initialState = {\r\n  techs: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TECHS:\r\n      return {\r\n        ...state,\r\n        techs: action.payload,\r\n      };\r\n    case ADD_TECH:\r\n      return {\r\n        ...state,\r\n        techs: [...state.techs, action.payload],\r\n        loading: false,\r\n      };\r\n    case DELETE_TECH:\r\n      return {\r\n        ...state,\r\n        techs: state.techs.filter((tech) => tech._id !== action.payload),\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case TECHS_ERROR:\r\n      console.log('Error', action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n  log: logReducer,\r\n  tech: techReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunkMiddleware];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useEffect, Fragment } from 'react';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nimport SearchBar from './components/layout/SearchBar';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/tech/AddTechModal';\nimport Logs from './components/logs/Logs';\nimport Techs from './components/tech/Techs';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    //Init Meterialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <Techs />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}